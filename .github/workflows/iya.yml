name: Enum-Test

on:
  push:
    branches: [master]

jobs:
  enum:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Tools
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y wget unzip jq git curl dnsutils
          go install github.com/cybercdh/assetfinder@cybercdh && sudo mv ~/go/bin/assetfinder /usr/bin/
          LATEST_VERSION=$(curl -s https://api.github.com/repos/projectdiscovery/nuclei/releases/latest | jq -r '.tag_name')
          CLEAN_VERSION=${LATEST_VERSION#v}
          wget https://github.com/projectdiscovery/nuclei/releases/download/${LATEST_VERSION}/nuclei_${CLEAN_VERSION}_linux_amd64.zip
          unzip -o nuclei_${CLEAN_VERSION}_linux_amd64.zip
          sudo mv nuclei /usr/bin/
          sudo chmod +x /usr/bin/nuclei
          rm -rf nuclei* *.md

      - name: Run
        env:
          DOMAINS: ${{ secrets.DOMAIN }}
        run: |
          set -e
          TODAY=$(date +%F)
          mkdir -p results
          echo "$DOMAINS" | while read -r TARGET; do
            [ -z "$TARGET" ] && continue
            echo "Enumiration: $TARGET"
            mkdir -p results/$TARGET

            echo "[*] Subdomain..."
            assetfinder --subs-only $TARGET | grep "\.${TARGET}$" | sort -u > results/$TARGET/subdomains.txt

            echo "[*] Nuclei..."
            nuclei -l results/$TARGET/subdomains.txt \
              -severity medium,high,critical,low,info,unknown \
              -c 50 \
              -timeout 10 \
              -rate-limit 100 \
              -silent \
              -o results/$TARGET/nuclei.txt
          done

      - name: Send Telegram Alert
        if: always()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          DOMAINS: ${{ secrets.DOMAIN }}
        run: |
          echo "$DOMAINS" | while read -r TARGET; do
            [ -z "$TARGET" ] && continue
            if [ -s results/$TARGET/nuclei.txt ]; then
              declare -A SEV_EMOJI=( \
                ["critical"]="üö® Critical" \
                ["high"]="üî¥ High" \
                ["medium"]="üü† Medium" \
                ["low"]="üü¢ Low" \
                ["info"]="üîç Info" \
                ["unknown"]="‚ùì Unknown" \
              )
              for sev in critical high medium low info unknown; do
                grep -i "\[$sev\]" results/$TARGET/nuclei.txt | while IFS= read -r line; do
                  # send 1 line per msg, prefixed with emoji+sev
                  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                    -d chat_id="${TELEGRAM_CHAT_ID}" \
                    --data-urlencode "text=${SEV_EMOJI[$sev]} | $line"
                  sleep 0.5
                done
              done
            else
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d chat_id="${TELEGRAM_CHAT_ID}" \
                -d text="‚úÖ Scan done for: $TARGET ‚Äî No vulnerabilities found."
            fi
          done

      - name: Git & Push results
        if: always()
        env:
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          USER_NAME: ${{ secrets.USER_NAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config --global user.email "${EMAIL_ADDRESS}"
          git config --global user.name "${USER_NAME}"
          git add results/ || true
          git commit -m "scans/results: $(date -u)" --no-verify || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:master || true
