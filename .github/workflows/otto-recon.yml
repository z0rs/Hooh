name: Mercedes-Benz

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      ywh_username:
        description: "Your YesWeHack username to append in the UA (e.g., 0x3n0)"
        required: true
        default: "0x3n0"
      rate_limit:
        description: "Max requests per second for httpx/katana"
        required: true
        default: "1"

jobs:
  recon:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      id-token: write
    env:
      YWH_USER: ${{ inputs.ywh_username || '0x3n0' }}
      RPS: ${{ inputs.rate_limit || '1' }}
      UA: "Bug-Bounty-Hunter-#${{ inputs.ywh_username || '0x3n0' }}#"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ProjectDiscovery tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq unzip
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/projectdiscovery/katana/cmd/katana@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Prepare scope & blocklist
        shell: bash
        run: |
          mkdir -p recon
          cat > recon/scope.roots.txt <<'EOF'
          otto.de
          www.otto.de
          www.otto.de/jobs
          lascana.de
          teleoptiprd.otto.de
          mmp.otto.de
          orbidder.otto.de
          supplier-connect.otto.de
          retail-api.otto.de
          EOF

          cat > recon/blocklist.txt <<'EOF'
          reblog.otto.de
          roombeez.otto.de
          twoforfashion.otto.de
          soulfully.otto.de
          updated.otto.de
          newsroom.otto.de
          www.otto.de/kundenchat
          www.otto.de/clara
          www.otto.de/user/sendcallbackrequest
          www.otto.de/user/contactFormSubmit
          keycloak.apps.otto.de
          /apps-messenger
          /tracking
          EOF

      - name: Passive subdomain discovery (subfinder)
        run: |
          subfinder -silent -all -nW -pc -dL recon/scope.roots.txt \
            | sort -u > recon/subdomains.txt
          wc -l recon/subdomains.txt || true

      - name: Resolve alive hosts (dnsx)
        run: |
          dnsx -silent -a -resp -retries 2 -rl 30 -r public-dns.info \
            -l recon/subdomains.txt | awk '{print $1}' | sort -u > recon/alive.subs.txt
          wc -l recon/alive.subs.txt || true

      - name: Probe HTTP(S) with custom UA (httpx)
        run: |
          httpx -silent -threads 25 -rl ${RPS} -H "User-Agent: ${UA}" \
            -l recon/alive.subs.txt \
            -status-code -title -tech-detect -server -follow-redirects \
            -no-color | tee recon/httpx.raw.txt

          grep -vi -f recon/blocklist.txt recon/httpx.raw.txt > recon/httpx.in-scope.txt || true

      - name: Light crawl for own hosts (katana, depth 1)
        run: |
          cut -d ' ' -f1 recon/httpx.in-scope.txt | \
          katana -silent -rl ${RPS} -concurrency 2 -depth 1 -no-color -retry 1 \
                 -jc -kf -H "User-Agent: ${UA}" \
            | sort -u > recon/katana.urls.txt

          grep -vi -f recon/blocklist.txt recon/katana.urls.txt > recon/urls.in-scope.txt || true
          wc -l recon/urls.in-scope.txt || true

      - name: Prepare Manual Review Checklist
        run: |
          mkdir -p reports
          if [[ ! -s recon/urls.in-scope.txt ]]; then
            echo "No URLs found in-scope, skipping checklist." >&2
            exit 0
          fi

          grep -Ei '\?(id|token|redirect|next|return|callback|code|state|lang|file|path|download|api|v1|v2|search|q=)' recon/urls.in-scope.txt \
            | sort -u | head -n 200 > reports/interesting-urls.txt

          cat > reports/README.md <<EOF
          # Otto.de â€“ Manual Review Checklist

          **User-Agent to use:** \`${UA}\`

          **Hard rules (do NOT do):**
          - No mass/automated scanning
          - No DoS, no intrusive tests
          - No extracting customer data / PII
          - No entering unauthorized payment info
          - No external scripts for XSS, use \`alert(17)\` only for verification

          **Suggested manual checks:**
          - Open Redirect candidates: \`redirect\`, \`next\`, \`return\`
          - IDOR: numeric IDs, object keys in path/query
          - CORS: misconfig + real impact (token theft scenario)
          - Auth flows: OAuth params (code/state), CSRF on critical actions
          - File/Path handlers: \`file\`, \`path\`, \`download\`
          - Caching/misconfig on authenticated endpoints

          See: \`interesting-urls.txt\` for a shortlist.
          EOF

          echo "Prepared reports/ with checklist. Review manually with UA: ${UA}"

      - name: Summaries
        run: |
          echo "Subdomains: $(wc -l < recon/subdomains.txt)" | tee recon/summary.txt
          echo "Alive hosts: $(wc -l < recon/alive.subs.txt)" | tee -a recon/summary.txt
          echo "HTTP endpoints (in-scope): $(wc -l < recon/httpx.in-scope.txt)" | tee -a recon/summary.txt
          echo "URLs (in-scope, depth1): $(wc -l < recon/urls.in-scope.txt)" | tee -a recon/summary.txt
          printf "\nUser-Agent used: %s\n" "$UA" | tee -a recon/summary.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: otto-recon-${{ inputs.ywh_username }}
          path: |
            recon/summary.txt
            recon/subdomains.txt
            recon/alive.subs.txt
            recon/httpx.in-scope.txt
            recon/urls.in-scope.txt
            reports/README.md
            reports/interesting-urls.txt
